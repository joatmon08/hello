---
version: 2

defaults: &defaults
  docker:
    - image: circleci/golang:1.12
  working_directory: /go/src/github.com/joatmon08/hello
  environment:
    LIBRARY: joatmon08
    CONTAINER_NAME: hello

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Test application
          command: |
            go mod download
            go test github.com/joatmon08/hello/test/unit

  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application container
          command: |
            echo $DOCKER_HUB_KEY | docker login -u $DOCKER_HUB_USER --password-stdin
            CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o hello .
            docker build -t $LIBRARY/$CONTAINER_NAME:latest .
            docker tag $LIBRARY/$CONTAINER_NAME:latest $LIBRARY/$CONTAINER_NAME:$CIRCLE_BUILD_NUM-$CIRCLE_SHA1
            docker push $LIBRARY/$CONTAINER_NAME:$CIRCLE_BUILD_NUM-$CIRCLE_SHA1
            docker push $LIBRARY/$CONTAINER_NAME:latest
      - run:
          name: Build integration test container
          command: |
            docker build -t joatmon08/hello:integration-tests -f Dockerfile.test .
            docker tag $LIBRARY/$CONTAINER_NAME:integration-tests $LIBRARY/$CONTAINER_NAME:integration-tests-$CIRCLE_BUILD_NUM-$CIRCLE_SHA1
            docker push $LIBRARY/$CONTAINER_NAME:integration-tests-$CIRCLE_BUILD_NUM-$CIRCLE_SHA1
            docker push $LIBRARY/$CONTAINER_NAME:integration-tests
      - run:
          name: store image version
          command: |
            mkdir /tmp/build
            echo "IMAGE_VERSION=$CIRCLE_BUILD_NUM-$CIRCLE_SHA1" > /tmp/build/version.env
      - persist_to_workspace:
          name: persist version across jobs
          root: /tmp/build
          paths:
            - version.env

  security:
    <<: *defaults
    docker:
      - image: circleci/ruby:2.5
    working_directory: ~/hello
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: install dependencies
          command: bundle install
      - run:
          name: Test container
          command: |
            source /tmp/workspace/version.env
            echo $DOCKER_HUB_KEY | docker login -u $DOCKER_HUB_USER --password-stdin
            docker pull $LIBRARY/$CONTAINER_NAME:$IMAGE_VERSION
            CID="$(docker run -d -v /var/run/docker.sock:/var/run/docker.sock:ro $LIBRARY/$CONTAINER_NAME:$IMAGE_VERSION)"
            inspec exec profiles/hello -t docker://$CID
            docker rm -f $CID

workflows:
  version: 2
  hello:
    jobs:
      - test
      - build:
          requires:
            - test
      - security:
          requires:
            - build